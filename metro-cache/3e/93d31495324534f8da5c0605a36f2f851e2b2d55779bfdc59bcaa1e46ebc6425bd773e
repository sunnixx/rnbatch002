{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-safe-area-view","isAsync":false},{"name":"./CrossFadeIcon","isAsync":false},{"name":"../utils/withDimensions","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNativeSafeAreaView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"react-native-safe-area-view\"));\n\n  var _CrossFadeIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./CrossFadeIcon\"));\n\n  var _withDimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../utils/withDimensions\"));\n\n  var _jsxFileName = \"/home/sumair/Desktop/My Stuff/RN Batch 02/dbconnapp/node_modules/react-navigation-tabs/dist/views/BottomTabBar.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    TouchableWithoutFeedbackWrapper: {\n      displayName: \"TouchableWithoutFeedbackWrapper\"\n    },\n    TabBarBottom: {\n      displayName: \"TabBarBottom\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/sumair/Desktop/My Stuff/RN Batch 02/dbconnapp/node_modules/react-navigation-tabs/dist/views/BottomTabBar.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var majorVersion = parseInt(_reactNative.Platform.Version, 10);\n  var isIos = _reactNative.Platform.OS === 'ios';\n  var isIOS11 = majorVersion >= 11 && isIos;\n  var DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\n  var TouchableWithoutFeedbackWrapper = function (_React$Component) {\n    function TouchableWithoutFeedbackWrapper() {\n      _classCallCheck(this, TouchableWithoutFeedbackWrapper);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(TouchableWithoutFeedbackWrapper).apply(this, arguments));\n    }\n\n    _createClass(TouchableWithoutFeedbackWrapper, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            onPress = _this$props.onPress,\n            testID = _this$props.testID,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            props = _objectWithoutProperties(_this$props, [\"onPress\", \"testID\", \"accessibilityLabel\"]);\n\n        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n          onPress: onPress,\n          testID: testID,\n          accessibilityLabel: accessibilityLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          }\n        }, _react.default.createElement(_reactNative.View, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          }\n        })));\n      }\n    }]);\n\n    _inherits(TouchableWithoutFeedbackWrapper, _React$Component);\n\n    return TouchableWithoutFeedbackWrapper;\n  }(_react.default.Component);\n\n  TouchableWithoutFeedbackWrapper = _wrapComponent(\"TouchableWithoutFeedbackWrapper\")(TouchableWithoutFeedbackWrapper);\n\n  var TabBarBottom = function (_React$Component2) {\n    function TabBarBottom() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, TabBarBottom);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarBottom)).call.apply(_getPrototypeOf2, [this].concat(args))), _this._renderLabel = function (_ref) {\n        var route = _ref.route,\n            focused = _ref.focused;\n        var _this$props2 = _this.props,\n            activeTintColor = _this$props2.activeTintColor,\n            inactiveTintColor = _this$props2.inactiveTintColor,\n            labelStyle = _this$props2.labelStyle,\n            showLabel = _this$props2.showLabel,\n            showIcon = _this$props2.showIcon,\n            allowFontScaling = _this$props2.allowFontScaling;\n\n        if (showLabel === false) {\n          return null;\n        }\n\n        var label = _this.props.getLabelText({\n          route: route\n        });\n\n        var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n        if (typeof label === 'string') {\n          return _react.default.createElement(_reactNative.Animated.Text, {\n            numberOfLines: 1,\n            style: [styles.label, {\n              color: tintColor\n            }, showIcon && _this._shouldUseHorizontalLabels() ? styles.labelBeside : styles.labelBeneath, styles.labelBeneath, labelStyle],\n            allowFontScaling: allowFontScaling,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            }\n          }, label);\n        }\n\n        if (typeof label === 'function') {\n          return label({\n            route: route,\n            focused: focused,\n            tintColor: tintColor\n          });\n        }\n\n        return label;\n      }, _this._renderIcon = function (_ref2) {\n        var route = _ref2.route,\n            focused = _ref2.focused;\n        var _this$props3 = _this.props,\n            navigation = _this$props3.navigation,\n            activeTintColor = _this$props3.activeTintColor,\n            inactiveTintColor = _this$props3.inactiveTintColor,\n            renderIcon = _this$props3.renderIcon,\n            showIcon = _this$props3.showIcon,\n            showLabel = _this$props3.showLabel;\n\n        if (showIcon === false) {\n          return null;\n        }\n\n        var horizontal = _this._shouldUseHorizontalLabels();\n\n        var activeOpacity = focused ? 1 : 0;\n        var inactiveOpacity = focused ? 0 : 1;\n        return _react.default.createElement(_CrossFadeIcon.default, {\n          route: route,\n          navigation: navigation,\n          activeOpacity: activeOpacity,\n          inactiveOpacity: inactiveOpacity,\n          activeTintColor: activeTintColor,\n          inactiveTintColor: inactiveTintColor,\n          renderIcon: renderIcon,\n          style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          }\n        });\n      }, _this._shouldUseHorizontalLabels = function () {\n        var routes = _this.props.navigation.state.routes;\n        var _this$props4 = _this.props,\n            isLandscape = _this$props4.isLandscape,\n            dimensions = _this$props4.dimensions,\n            adaptive = _this$props4.adaptive,\n            tabStyle = _this$props4.tabStyle;\n\n        if (!adaptive) {\n          return false;\n        }\n\n        if (_reactNative.Platform.isPad) {\n          var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n          var flattenedStyle = _reactNative.StyleSheet.flatten(tabStyle);\n\n          if (flattenedStyle) {\n            if (typeof flattenedStyle.width === 'number') {\n              maxTabItemWidth = flattenedStyle.width;\n            } else if (typeof flattenedStyle.maxWidth === 'number') {\n              maxTabItemWidth = flattenedStyle.maxWidth;\n            }\n          }\n\n          return routes.length * maxTabItemWidth <= dimensions.width;\n        } else {\n          return isLandscape;\n        }\n      }, _temp));\n    }\n\n    _createClass(TabBarBottom, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props5 = this.props,\n            navigation = _this$props5.navigation,\n            activeBackgroundColor = _this$props5.activeBackgroundColor,\n            inactiveBackgroundColor = _this$props5.inactiveBackgroundColor,\n            onTabPress = _this$props5.onTabPress,\n            style = _this$props5.style,\n            tabStyle = _this$props5.tabStyle;\n        var routes = navigation.state.routes;\n        var tabBarStyle = [styles.tabBar, this._shouldUseHorizontalLabels() && !_reactNative.Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n        return _react.default.createElement(_reactNativeSafeAreaView.default, {\n          style: tabBarStyle,\n          forceInset: {\n            bottom: 'always',\n            top: 'never'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          }\n        }, routes.map(function (route, index) {\n          var focused = index === navigation.state.index;\n          var scene = {\n            route: route,\n            focused: focused\n          };\n\n          var accessibilityLabel = _this2.props.getAccessibilityLabel({\n            route: route\n          });\n\n          var testID = _this2.props.getTestID({\n            route: route\n          });\n\n          var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n          var ButtonComponent = _this2.props.getButtonComponent({\n            route: route\n          }) || TouchableWithoutFeedbackWrapper;\n          return _react.default.createElement(ButtonComponent, {\n            key: route.key,\n            onPress: function onPress() {\n              return onTabPress({\n                route: route\n              });\n            },\n            testID: testID,\n            accessibilityLabel: accessibilityLabel,\n            style: [styles.tab, {\n              backgroundColor: backgroundColor\n            }, _this2._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            }\n          }, _this2._renderIcon(scene), _this2._renderLabel(scene));\n        }));\n      }\n    }]);\n\n    _inherits(TabBarBottom, _React$Component2);\n\n    return TabBarBottom;\n  }(_react.default.Component);\n\n  TabBarBottom.defaultProps = {\n    activeTintColor: '#3478f6',\n    activeBackgroundColor: 'transparent',\n    inactiveTintColor: '#929292',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11\n  };\n  TabBarBottom = _wrapComponent(\"TabBarBottom\")(TabBarBottom);\n  var DEFAULT_HEIGHT = 49;\n  var COMPACT_HEIGHT = 29;\n\n  var styles = _reactNative.StyleSheet.create({\n    tabBar: {\n      backgroundColor: '#F7F7F7',\n      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n      borderTopColor: 'rgba(0, 0, 0, .3)',\n      flexDirection: 'row'\n    },\n    tabBarCompact: {\n      height: COMPACT_HEIGHT\n    },\n    tabBarRegular: {\n      height: DEFAULT_HEIGHT\n    },\n    tab: {\n      flex: 1,\n      alignItems: isIos ? 'center' : 'stretch'\n    },\n    tabPortrait: {\n      justifyContent: 'flex-end',\n      flexDirection: 'column'\n    },\n    tabLandscape: {\n      justifyContent: 'center',\n      flexDirection: 'row'\n    },\n    iconWithoutLabel: {\n      flex: 1\n    },\n    iconWithLabel: {\n      flex: 1\n    },\n    iconWithExplicitHeight: {\n      height: _reactNative.Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n    },\n    label: {\n      textAlign: 'center',\n      backgroundColor: 'transparent'\n    },\n    labelBeneath: {\n      fontSize: 10,\n      marginBottom: 1.5\n    },\n    labelBeside: {\n      fontSize: 13,\n      marginLeft: 20\n    }\n  });\n\n  var _default2 = (0, _withDimensions.default)(TabBarBottom);\n\n  exports.default = _default2;\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,5,0],[17,0,6,0],[65,0,8,0],[65,6,8,6,"majorVersion"],[65,21,8,21,"parseInt"],[65,30,8,30,"Platform"],[65,52,8,39,"Version"],[65,59,8,21],[65,61,8,48],[65,63,8,21],[65,64,8,0],[66,0,9,0],[66,6,9,6,"isIos"],[66,14,9,14,"Platform"],[66,36,9,23,"OS"],[66,38,9,14],[66,43,9,30],[66,48,9,0],[67,0,10,0],[67,6,10,6,"isIOS11"],[67,16,10,16,"majorVersion"],[67,32,10,32],[67,34,10,16],[67,38,10,38,"isIos"],[67,43,10,0],[68,0,12,0],[68,6,12,6,"DEFAULT_MAX_TAB_ITEM_WIDTH"],[68,35,12,35],[68,38,12,0],[70,6,14,6,"TouchableWithoutFeedbackWrapper"],[70,37],[79,31,15,11],[80,0,15,11],[80,26,16,62],[80,31,16,67,"props"],[80,36,15,11],[81,0,15,11],[81,12,16,12,"onPress"],[81,19,15,11],[81,34,16,12,"onPress"],[81,41,15,11],[82,0,15,11],[82,12,16,21,"testID"],[82,18,15,11],[82,33,16,21,"testID"],[82,39,15,11],[83,0,15,11],[83,12,16,29,"accessibilityLabel"],[83,30,15,11],[83,45,16,29,"accessibilityLabel"],[83,63,15,11],[84,0,15,11],[84,12,16,52,"props"],[84,17,15,11],[86,0,18,4],[86,15,18,11],[86,44,18,12],[86,81,18,11],[87,0,18,37],[87,19,18,46,"onPress"],[87,26,18,11],[88,0,18,55],[88,18,18,63,"testID"],[88,24,18,11],[89,0,18,71],[89,30,18,91,"accessibilityLabel"],[89,48,18,11],[90,0,18,11],[91,0,18,11],[92,0,18,11],[93,0,18,11],[94,0,18,11],[94,11,19,8],[94,40,19,9],[94,57,19,8],[94,72,19,18,"props"],[94,77,19,8],[95,0,19,8],[96,0,19,8],[97,0,19,8],[98,0,19,8],[99,0,19,8],[99,11,18,11],[99,12,18,4],[100,0,21,3],[106,4,14,46,"React"],[106,19,14,52,"Component"],[106,28],[110,6,24,6,"TabBarBottom"],[110,18],[122,206,36,2,"_renderLabel"],[122,218],[122,221,36,17],[122,237,36,41],[123,0,36,41],[123,12,36,20,"route"],[123,17,36,41],[123,25,36,20,"route"],[123,30,36,41],[124,0,36,41],[124,12,36,27,"focused"],[124,19,36,41],[124,27,36,27,"focused"],[124,34,36,41],[125,0,36,41],[125,27,44,8],[125,33,44,13,"props"],[125,38,36,41],[126,0,36,41],[126,12,38,6,"activeTintColor"],[126,27,36,41],[126,43,38,6,"activeTintColor"],[126,58,36,41],[127,0,36,41],[127,12,39,6,"inactiveTintColor"],[127,29,36,41],[127,45,39,6,"inactiveTintColor"],[127,62,36,41],[128,0,36,41],[128,12,40,6,"labelStyle"],[128,22,36,41],[128,38,40,6,"labelStyle"],[128,48,36,41],[129,0,36,41],[129,12,41,6,"showLabel"],[129,21,36,41],[129,37,41,6,"showLabel"],[129,46,36,41],[130,0,36,41],[130,12,42,6,"showIcon"],[130,20,36,41],[130,36,42,6,"showIcon"],[130,44,36,41],[131,0,36,41],[131,12,43,6,"allowFontScaling"],[131,28,36,41],[131,44,43,6,"allowFontScaling"],[131,60,36,41],[133,0,46,4],[133,12,46,8,"showLabel"],[133,26,46,22],[133,31,46,4],[133,33,46,29],[134,0,47,6],[134,17,47,13],[134,21,47,6],[135,0,48,5],[137,0,50,4],[137,12,50,10,"label"],[137,20,50,18],[137,26,50,23,"props"],[137,31,50,18],[137,32,50,29,"getLabelText"],[137,44,50,18],[137,45,50,42],[138,0,50,44,"route"],[139,0,50,42],[139,9,50,18],[139,10,50,4],[141,0,51,4],[141,12,51,10,"tintColor"],[141,24,51,22,"focused"],[141,34,51,32,"activeTintColor"],[141,49,51,22],[141,52,51,50,"inactiveTintColor"],[141,69,51,4],[143,0,53,4],[143,12,53,8],[143,19,53,15,"label"],[143,24,53,8],[143,29,53,25],[143,37,53,4],[143,39,53,35],[144,0,54,6],[144,17,54,13],[144,46,54,14],[144,67,54,13],[144,68,54,23],[144,72,54,13],[145,0,54,28],[145,27,54,43],[145,28,54,13],[146,0,54,46],[146,19,54,53],[146,20,54,54,"styles"],[146,27,54,61,"label"],[146,32,54,53],[146,34,54,68],[147,0,54,70,"color"],[147,21,54,77,"tintColor"],[148,0,54,68],[148,13,54,53],[148,15,54,90,"showIcon"],[148,27,54,102],[148,33,54,107,"_shouldUseHorizontalLabels"],[148,59,54,102],[148,61,54,90],[148,64,54,138,"styles"],[148,71,54,145,"labelBeside"],[148,82,54,90],[148,85,54,159,"styles"],[148,92,54,166,"labelBeneath"],[148,104,54,53],[148,106,54,180,"styles"],[148,113,54,187,"labelBeneath"],[148,125,54,53],[148,127,54,201,"labelStyle"],[148,137,54,53],[148,138,54,13],[149,0,54,214],[149,30,54,232,"allowFontScaling"],[149,46,54,13],[150,0,54,13],[151,0,54,13],[152,0,54,13],[153,0,54,13],[154,0,54,13],[154,13,55,11,"label"],[154,18,54,13],[154,19,54,6],[155,0,57,5],[157,0,59,4],[157,12,59,8],[157,19,59,15,"label"],[157,24,59,8],[157,29,59,25],[157,39,59,4],[157,41,59,37],[158,0,60,6],[158,17,60,13,"label"],[158,23,60,19],[159,0,60,21,"route"],[159,24,60,19],[160,0,60,28,"focused"],[160,28,60,19],[161,0,60,37,"tintColor"],[162,0,60,19],[162,11,60,13],[162,12,60,6],[163,0,61,5],[165,0,63,4],[165,15,63,11,"label"],[165,20,63,4],[166,0,64,3],[166,7],[166,15,66,2,"_renderIcon"],[166,26],[166,29,66,16],[166,46,66,40],[167,0,66,40],[167,12,66,19,"route"],[167,17,66,40],[167,26,66,19,"route"],[167,31,66,40],[168,0,66,40],[168,12,66,26,"focused"],[168,19,66,40],[168,28,66,26,"focused"],[168,35,66,40],[169,0,66,40],[169,27,74,8],[169,33,74,13,"props"],[169,38,66,40],[170,0,66,40],[170,12,68,6,"navigation"],[170,22,66,40],[170,38,68,6,"navigation"],[170,48,66,40],[171,0,66,40],[171,12,69,6,"activeTintColor"],[171,27,66,40],[171,43,69,6,"activeTintColor"],[171,58,66,40],[172,0,66,40],[172,12,70,6,"inactiveTintColor"],[172,29,66,40],[172,45,70,6,"inactiveTintColor"],[172,62,66,40],[173,0,66,40],[173,12,71,6,"renderIcon"],[173,22,66,40],[173,38,71,6,"renderIcon"],[173,48,66,40],[174,0,66,40],[174,12,72,6,"showIcon"],[174,20,66,40],[174,36,72,6,"showIcon"],[174,44,66,40],[175,0,66,40],[175,12,73,6,"showLabel"],[175,21,66,40],[175,37,73,6,"showLabel"],[175,46,66,40],[177,0,75,4],[177,12,75,8,"showIcon"],[177,25,75,21],[177,30,75,4],[177,32,75,28],[178,0,76,6],[178,17,76,13],[178,21,76,6],[179,0,77,5],[181,0,79,4],[181,12,79,10,"horizontal"],[181,25,79,23],[181,31,79,28,"_shouldUseHorizontalLabels"],[181,57,79,23],[181,59,79,4],[183,0,81,4],[183,12,81,10,"activeOpacity"],[183,28,81,26,"focused"],[183,38,81,36],[183,39,81,26],[183,42,81,40],[183,43,81,4],[184,0,82,4],[184,12,82,10,"inactiveOpacity"],[184,30,82,28,"focused"],[184,40,82,38],[184,41,82,28],[184,44,82,42],[184,45,82,4],[185,0,84,4],[185,15,84,11],[185,44,84,12],[185,66,84,11],[186,0,84,26],[186,17,84,33,"route"],[186,22,84,11],[187,0,84,40],[187,22,84,52,"navigation"],[187,32,84,11],[188,0,84,64],[188,25,84,79,"activeOpacity"],[188,38,84,11],[189,0,84,94],[189,27,84,111,"inactiveOpacity"],[189,42,84,11],[190,0,84,128],[190,27,84,145,"activeTintColor"],[190,42,84,11],[191,0,84,162],[191,29,84,181,"inactiveTintColor"],[191,46,84,11],[192,0,84,200],[192,22,84,212,"renderIcon"],[192,32,84,11],[193,0,84,224],[193,17,84,231],[193,18,84,232,"styles"],[193,25,84,239,"iconWithExplicitHeight"],[193,47,84,231],[193,49,84,263,"showLabel"],[193,63,84,277],[193,68,84,263],[193,72,84,286],[193,73,84,287,"horizontal"],[193,83,84,263],[193,87,84,301,"styles"],[193,94,84,308,"iconWithoutLabel"],[193,110,84,231],[193,112,84,326,"showLabel"],[193,126,84,340],[193,131,84,326],[193,135,84,349],[193,136,84,350,"horizontal"],[193,146,84,326],[193,150,84,364,"styles"],[193,157,84,371,"iconWithLabel"],[193,170,84,231],[193,171,84,11],[194,0,84,11],[195,0,84,11],[196,0,84,11],[197,0,84,11],[198,0,84,11],[198,10,84,4],[199,0,85,3],[199,7],[199,15,87,2,"_shouldUseHorizontalLabels"],[199,41],[199,44,87,31],[199,56,87,37],[200,0,87,37],[200,12,88,12,"routes"],[200,18,87,37],[200,21,88,23],[200,27,88,28,"props"],[200,32,88,23],[200,33,88,34,"navigation"],[200,43,88,23],[200,44,88,45,"state"],[200,49,87,37],[200,50,88,12,"routes"],[200,56,87,37],[201,0,87,37],[201,27,89,60],[201,33,89,65,"props"],[201,38,87,37],[202,0,87,37],[202,12,89,12,"isLandscape"],[202,23,87,37],[202,39,89,12,"isLandscape"],[202,50,87,37],[203,0,87,37],[203,12,89,25,"dimensions"],[203,22,87,37],[203,38,89,25,"dimensions"],[203,48,87,37],[204,0,87,37],[204,12,89,37,"adaptive"],[204,20,87,37],[204,36,89,37,"adaptive"],[204,44,87,37],[205,0,87,37],[205,12,89,47,"tabStyle"],[205,20,87,37],[205,36,89,47,"tabStyle"],[205,44,87,37],[207,0,91,4],[207,12,91,8],[207,13,91,9,"adaptive"],[207,21,91,4],[207,23,91,19],[208,0,92,6],[208,17,92,13],[208,22,92,6],[209,0,93,5],[211,0,95,4],[211,12,95,8,"Platform"],[211,34,95,17,"isPad"],[211,39,95,4],[211,41,95,24],[212,0,96,6],[212,14,96,10,"maxTabItemWidth"],[212,32,96,28,"DEFAULT_MAX_TAB_ITEM_WIDTH"],[212,58,96,6],[214,0,98,6],[214,14,98,12,"flattenedStyle"],[214,31,98,29,"StyleSheet"],[214,55,98,40,"flatten"],[214,62,98,29],[214,63,98,48,"tabStyle"],[214,71,98,29],[214,72,98,6],[216,0,100,6],[216,14,100,10,"flattenedStyle"],[216,28,100,6],[216,30,100,26],[217,0,101,8],[217,16,101,12],[217,23,101,19,"flattenedStyle"],[217,38,101,34,"width"],[217,43,101,12],[217,48,101,44],[217,56,101,8],[217,58,101,54],[218,0,102,10,"maxTabItemWidth"],[218,32,102,28,"flattenedStyle"],[218,47,102,43,"width"],[218,52,102,10],[219,0,103,9],[219,13,101,8],[219,19,103,15],[219,23,103,19],[219,30,103,26,"flattenedStyle"],[219,45,103,41,"maxWidth"],[219,53,103,19],[219,58,103,54],[219,66,103,15],[219,68,103,64],[220,0,104,10,"maxTabItemWidth"],[220,32,104,28,"flattenedStyle"],[220,47,104,43,"maxWidth"],[220,55,104,10],[221,0,105,9],[222,0,106,7],[224,0,108,6],[224,17,108,13,"routes"],[224,24,108,20,"length"],[224,30,108,13],[224,33,108,29,"maxTabItemWidth"],[224,48,108,13],[224,52,108,48,"dimensions"],[224,63,108,59,"width"],[224,68,108,6],[225,0,109,5],[225,9,95,4],[225,15,109,11],[226,0,110,6],[226,17,110,13,"isLandscape"],[226,28,110,6],[227,0,111,5],[228,0,112,3],[228,7],[233,31,114,11],[234,0,114,11],[236,0,114,11],[236,27,122,8],[236,32,122,13,"props"],[236,37,114,11],[237,0,114,11],[237,12,116,6,"navigation"],[237,22,114,11],[237,38,116,6,"navigation"],[237,48,114,11],[238,0,114,11],[238,12,117,6,"activeBackgroundColor"],[238,33,114,11],[238,49,117,6,"activeBackgroundColor"],[238,70,114,11],[239,0,114,11],[239,12,118,6,"inactiveBackgroundColor"],[239,35,114,11],[239,51,118,6,"inactiveBackgroundColor"],[239,74,114,11],[240,0,114,11],[240,12,119,6,"onTabPress"],[240,22,114,11],[240,38,119,6,"onTabPress"],[240,48,114,11],[241,0,114,11],[241,12,120,6,"style"],[241,17,114,11],[241,33,120,6,"style"],[241,38,114,11],[242,0,114,11],[242,12,121,6,"tabStyle"],[242,20,114,11],[242,36,121,6,"tabStyle"],[242,44,114,11],[243,0,114,11],[243,12,124,12,"routes"],[243,18,114,11],[243,21,124,23,"navigation"],[243,32,124,34,"state"],[243,37,114,11],[243,38,124,12,"routes"],[243,44,114,11],[244,0,126,4],[244,12,126,10,"tabBarStyle"],[244,26,126,24],[244,27,126,25,"styles"],[244,34,126,32,"tabBar"],[244,40,126,24],[244,42,126,40],[244,47,126,45,"_shouldUseHorizontalLabels"],[244,73,126,40],[244,79,126,77],[244,80,126,78,"Platform"],[244,102,126,87,"isPad"],[244,107,126,40],[244,110,126,95,"styles"],[244,117,126,102,"tabBarCompact"],[244,130,126,40],[244,133,126,118,"styles"],[244,140,126,125,"tabBarRegular"],[244,153,126,24],[244,155,126,140,"style"],[244,160,126,24],[244,161,126,4],[245,0,128,4],[245,15,128,11],[245,44,128,12],[245,76,128,11],[246,0,128,25],[246,17,128,32,"tabBarStyle"],[246,28,128,11],[247,0,128,45],[247,22,128,57],[248,0,128,59,"bottom"],[248,20,128,67],[248,28,128,57],[249,0,128,77,"top"],[249,17,128,82],[250,0,128,57],[250,11,128,11],[251,0,128,11],[252,0,128,11],[253,0,128,11],[254,0,128,11],[255,0,128,11],[255,11,129,9,"routes"],[255,18,129,16,"map"],[255,21,129,9],[255,22,129,20],[255,32,129,21,"route"],[255,37,129,20],[255,39,129,28,"index"],[255,44,129,20],[255,46,129,38],[256,0,130,8],[256,14,130,14,"focused"],[256,24,130,24,"index"],[256,34,130,34,"navigation"],[256,45,130,45,"state"],[256,50,130,34],[256,51,130,51,"index"],[256,56,130,8],[257,0,131,8],[257,14,131,14,"scene"],[257,22,131,22],[258,0,131,24,"route"],[258,24,131,22],[259,0,131,31,"focused"],[260,0,131,22],[260,11,131,8],[262,0,132,8],[262,14,132,14,"accessibilityLabel"],[262,35,132,35],[262,42,132,40,"props"],[262,47,132,35],[262,48,132,46,"getAccessibilityLabel"],[262,69,132,35],[262,70,132,68],[263,0,133,10,"route"],[264,0,132,68],[264,11,132,35],[264,12,132,8],[266,0,135,8],[266,14,135,14,"testID"],[266,23,135,23],[266,30,135,28,"props"],[266,35,135,23],[266,36,135,34,"getTestID"],[266,45,135,23],[266,46,135,44],[267,0,135,46,"route"],[268,0,135,44],[268,11,135,23],[268,12,135,8],[270,0,137,8],[270,14,137,14,"backgroundColor"],[270,32,137,32,"focused"],[270,42,137,42,"activeBackgroundColor"],[270,63,137,32],[270,66,137,66,"inactiveBackgroundColor"],[270,89,137,8],[271,0,139,8],[271,14,139,14,"ButtonComponent"],[271,32,139,32],[271,39,139,37,"props"],[271,44,139,32],[271,45,139,43,"getButtonComponent"],[271,63,139,32],[271,64,139,62],[272,0,139,64,"route"],[273,0,139,62],[273,11,139,32],[273,16,139,76,"TouchableWithoutFeedbackWrapper"],[273,47,139,8],[274,0,141,8],[274,17,141,15],[274,46,141,16],[274,61,141,15],[275,0,141,32],[275,17,141,37,"route"],[275,23,141,43,"key"],[275,26,141,15],[276,0,141,48],[276,21,141,57],[277,0,141,57],[277,21,141,63,"onTabPress"],[277,32,141,74],[278,0,141,76,"route"],[279,0,141,74],[279,15,141,63],[279,16,141,57],[280,0,141,57],[280,13,141,15],[281,0,141,86],[281,20,141,94,"testID"],[281,26,141,15],[282,0,141,102],[282,32,141,122,"accessibilityLabel"],[282,50,141,15],[283,0,141,142],[283,19,141,149],[283,20,141,150,"styles"],[283,27,141,157,"tab"],[283,30,141,149],[283,32,141,162],[284,0,141,164,"backgroundColor"],[285,0,141,162],[285,13,141,149],[285,15,141,183],[285,22,141,188,"_shouldUseHorizontalLabels"],[285,48,141,183],[285,53,141,219,"styles"],[285,60,141,226,"tabLandscape"],[285,72,141,183],[285,75,141,241,"styles"],[285,82,141,248,"tabPortrait"],[285,93,141,149],[285,95,141,261,"tabStyle"],[285,103,141,149],[285,104,141,15],[286,0,141,15],[287,0,141,15],[288,0,141,15],[289,0,141,15],[290,0,141,15],[290,13,142,15],[290,20,142,20,"_renderIcon"],[290,31,142,15],[290,32,142,32,"scene"],[290,37,142,15],[290,38,141,15],[290,40,143,15],[290,47,143,20,"_renderLabel"],[290,59,143,15],[290,60,143,33,"scene"],[290,65,143,15],[290,66,141,15],[290,67,141,8],[291,0,145,7],[291,9,129,9],[291,10,128,11],[291,11,128,4],[292,0,147,3],[298,4,24,27,"React"],[298,19,24,33,"Component"],[298,28],[300,0,24,6,"TabBarBottom"],[300,14],[300,15,25,9,"defaultProps"],[300,27],[300,30,25,24],[301,0,26,4,"activeTintColor"],[301,21,26,21],[301,30,25,24],[302,0,27,4,"activeBackgroundColor"],[302,27,27,27],[302,40,25,24],[303,0,28,4,"inactiveTintColor"],[303,23,28,23],[303,32,25,24],[304,0,29,4,"inactiveBackgroundColor"],[304,29,29,29],[304,42,25,24],[305,0,30,4,"showLabel"],[305,15,30,15],[305,19,25,24],[306,0,31,4,"showIcon"],[306,14,31,14],[306,18,25,24],[307,0,32,4,"allowFontScaling"],[307,22,32,22],[307,26,25,24],[308,0,33,4,"adaptive"],[308,14,33,14,"isIOS11"],[309,0,25,24],[309,3],[311,0,150,0],[311,6,150,6,"DEFAULT_HEIGHT"],[311,23,150,23],[311,25,150,0],[312,0,151,0],[312,6,151,6,"COMPACT_HEIGHT"],[312,23,151,23],[312,25,151,0],[314,0,153,0],[314,6,153,6,"styles"],[314,15,153,15,"StyleSheet"],[314,39,153,26,"create"],[314,45,153,15],[314,46,153,33],[315,0,154,2,"tabBar"],[315,12,154,10],[316,0,155,4,"backgroundColor"],[316,23,155,21],[316,32,154,10],[317,0,156,4,"borderTopWidth"],[317,22,156,20,"StyleSheet"],[317,46,156,31,"hairlineWidth"],[317,59,154,10],[318,0,157,4,"borderTopColor"],[318,22,157,20],[318,41,154,10],[319,0,158,4,"flexDirection"],[319,21,158,19],[320,0,154,10],[320,5,153,33],[321,0,160,2,"tabBarCompact"],[321,19,160,17],[322,0,161,4,"height"],[322,14,161,12,"COMPACT_HEIGHT"],[323,0,160,17],[323,5,153,33],[324,0,163,2,"tabBarRegular"],[324,19,163,17],[325,0,164,4,"height"],[325,14,164,12,"DEFAULT_HEIGHT"],[326,0,163,17],[326,5,153,33],[327,0,166,2,"tab"],[327,9,166,7],[328,0,167,4,"flex"],[328,12,167,10],[328,13,166,7],[329,0,168,4,"alignItems"],[329,18,168,16,"isIos"],[329,26,168,24],[329,34,168,16],[329,37,168,35],[330,0,166,7],[330,5,153,33],[331,0,170,2,"tabPortrait"],[331,17,170,15],[332,0,171,4,"justifyContent"],[332,22,171,20],[332,32,170,15],[333,0,172,4,"flexDirection"],[333,21,172,19],[334,0,170,15],[334,5,153,33],[335,0,174,2,"tabLandscape"],[335,18,174,16],[336,0,175,4,"justifyContent"],[336,22,175,20],[336,30,174,16],[337,0,176,4,"flexDirection"],[337,21,176,19],[338,0,174,16],[338,5,153,33],[339,0,178,2,"iconWithoutLabel"],[339,22,178,20],[340,0,179,4,"flex"],[340,12,179,10],[341,0,178,20],[341,5,153,33],[342,0,181,2,"iconWithLabel"],[342,19,181,17],[343,0,182,4,"flex"],[343,12,182,10],[344,0,181,17],[344,5,153,33],[345,0,184,2,"iconWithExplicitHeight"],[345,28,184,26],[346,0,185,4,"height"],[346,14,185,12,"Platform"],[346,36,185,21,"isPad"],[346,41,185,12],[346,44,185,29,"DEFAULT_HEIGHT"],[346,58,185,12],[346,61,185,46,"COMPACT_HEIGHT"],[347,0,184,26],[347,5,153,33],[348,0,187,2,"label"],[348,11,187,9],[349,0,188,4,"textAlign"],[349,17,188,15],[349,25,187,9],[350,0,189,4,"backgroundColor"],[350,23,189,21],[351,0,187,9],[351,5,153,33],[352,0,191,2,"labelBeneath"],[352,18,191,16],[353,0,192,4,"fontSize"],[353,16,192,14],[353,18,191,16],[354,0,193,4,"marginBottom"],[354,20,193,18],[355,0,191,16],[355,5,153,33],[356,0,195,2,"labelBeside"],[356,17,195,15],[357,0,196,4,"fontSize"],[357,16,196,14],[357,18,195,15],[358,0,197,4,"marginLeft"],[358,18,197,16],[359,0,195,15],[360,0,153,33],[360,3,153,15],[360,4,153,0],[362,18,201,15],[362,47,201,30,"TabBarBottom"],[362,59,201,15],[362,60]]},"type":"js/module"}]}