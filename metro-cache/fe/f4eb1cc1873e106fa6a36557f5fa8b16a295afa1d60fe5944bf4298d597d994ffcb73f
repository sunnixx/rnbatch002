{"dependencies":[{"name":"../utils/invariant","isAsync":false},{"name":"../utils/shallowEqual","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ScenesReducer;\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../utils/invariant\"));\n\n  var _shallowEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../utils/shallowEqual\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var SCENE_KEY_PREFIX = 'scene_';\n\n  function compareKey(one, two) {\n    var delta = one.length - two.length;\n\n    if (delta > 0) {\n      return 1;\n    }\n\n    if (delta < 0) {\n      return -1;\n    }\n\n    return one > two ? 1 : -1;\n  }\n\n  function compareScenes(one, two) {\n    if (one.index > two.index) {\n      return 1;\n    }\n\n    if (one.index < two.index) {\n      return -1;\n    }\n\n    return compareKey(one.key, two.key);\n  }\n\n  function areScenesShallowEqual(one, two) {\n    return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);\n  }\n\n  function areRoutesShallowEqual(one, two) {\n    if (!one || !two) {\n      return one === two;\n    }\n\n    if (one.key !== two.key) {\n      return false;\n    }\n\n    return (0, _shallowEqual.default)(one, two);\n  }\n\n  function ScenesReducer(scenes, nextState, prevState, descriptors) {\n    scenes.forEach(function (scene) {\n      var route = scene.route;\n\n      if (descriptors && descriptors[route.key]) {\n        scene.descriptor = descriptors[route.key];\n      }\n    });\n\n    if (prevState === nextState) {\n      return scenes;\n    }\n\n    var prevScenes = new Map();\n    var freshScenes = new Map();\n    var staleScenes = new Map();\n    scenes.forEach(function (scene) {\n      var key = scene.key;\n\n      if (scene.isStale) {\n        staleScenes.set(key, scene);\n      }\n\n      prevScenes.set(key, scene);\n    });\n    var nextKeys = new Set();\n    nextState.routes.forEach(function (route, index) {\n      var key = SCENE_KEY_PREFIX + route.key;\n      var descriptor = descriptors && descriptors[route.key];\n      var scene = {\n        index: index,\n        isActive: false,\n        isStale: false,\n        key: key,\n        route: route,\n        descriptor: descriptor\n      };\n      (0, _invariant.default)(!nextKeys.has(key), \"navigation.state.routes[\" + index + \"].key \\\"\" + key + \"\\\" conflicts with \" + 'another route!');\n      nextKeys.add(key);\n\n      if (staleScenes.has(key)) {\n        staleScenes.delete(key);\n      }\n\n      freshScenes.set(key, scene);\n    });\n\n    if (prevState) {\n      prevState.routes.forEach(function (route, index) {\n        var key = SCENE_KEY_PREFIX + route.key;\n\n        if (freshScenes.has(key)) {\n          return;\n        }\n\n        var lastScene = scenes.find(function (scene) {\n          return scene.route.key === route.key;\n        });\n        var descriptor = lastScene ? lastScene.descriptor : descriptors[route.key];\n\n        if (descriptor) {\n          staleScenes.set(key, {\n            index: index,\n            isActive: false,\n            isStale: true,\n            key: key,\n            route: route,\n            descriptor: descriptor\n          });\n        }\n      });\n    }\n\n    var nextScenes = [];\n\n    var mergeScene = function mergeScene(nextScene) {\n      var key = nextScene.key;\n      var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;\n\n      if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {\n        nextScenes.push(prevScene);\n      } else {\n        nextScenes.push(nextScene);\n      }\n    };\n\n    staleScenes.forEach(mergeScene);\n    freshScenes.forEach(mergeScene);\n    nextScenes.sort(compareScenes);\n    var activeScenesCount = 0;\n    nextScenes.forEach(function (scene, ii) {\n      var isActive = !scene.isStale && scene.index === nextState.index;\n\n      if (isActive !== scene.isActive) {\n        nextScenes[ii] = _objectSpread({}, scene, {\n          isActive: isActive\n        });\n      }\n\n      if (isActive) {\n        activeScenesCount++;\n      }\n    });\n    (0, _invariant.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);\n\n    if (nextScenes.length !== scenes.length) {\n      return nextScenes;\n    }\n\n    if (nextScenes.some(function (scene, index) {\n      return !areScenesShallowEqual(scenes[index], scene);\n    })) {\n      return nextScenes;\n    }\n\n    return scenes;\n  }\n});","map":[[7,0,1,0],[9,0,2,0],[17,0,4,0],[17,6,4,6,"SCENE_KEY_PREFIX"],[17,25,4,25],[17,33,4,0],[19,0,9,0],[19,11,9,9,"compareKey"],[19,21,9,0],[19,22,9,20,"one"],[19,25,9,0],[19,27,9,25,"two"],[19,30,9,0],[19,32,9,30],[20,0,10,2],[20,8,10,8,"delta"],[20,16,10,16,"one"],[20,20,10,20,"length"],[20,26,10,16],[20,29,10,29,"two"],[20,33,10,33,"length"],[20,39,10,2],[22,0,11,2],[22,8,11,6,"delta"],[22,16,11,14],[22,17,11,2],[22,19,11,17],[23,0,12,4],[23,13,12,11],[23,14,12,4],[24,0,13,3],[26,0,14,2],[26,8,14,6,"delta"],[26,16,14,14],[26,17,14,2],[26,19,14,17],[27,0,15,4],[27,13,15,11],[27,14,15,12],[27,15,15,4],[28,0,16,3],[30,0,17,2],[30,11,17,9,"one"],[30,17,17,15,"two"],[30,20,17,9],[30,23,17,21],[30,24,17,9],[30,27,17,25],[30,28,17,26],[30,29,17,2],[31,0,18,1],[33,0,23,0],[33,11,23,9,"compareScenes"],[33,24,23,0],[33,25,23,23,"one"],[33,28,23,0],[33,30,23,28,"two"],[33,33,23,0],[33,35,23,33],[34,0,24,2],[34,8,24,6,"one"],[34,12,24,10,"index"],[34,17,24,6],[34,20,24,18,"two"],[34,24,24,22,"index"],[34,29,24,2],[34,31,24,29],[35,0,25,4],[35,13,25,11],[35,14,25,4],[36,0,26,3],[38,0,27,2],[38,8,27,6,"one"],[38,12,27,10,"index"],[38,17,27,6],[38,20,27,18,"two"],[38,24,27,22,"index"],[38,29,27,2],[38,31,27,29],[39,0,28,4],[39,13,28,11],[39,14,28,12],[39,15,28,4],[40,0,29,3],[42,0,31,2],[42,11,31,9,"compareKey"],[42,22,31,20,"one"],[42,26,31,24,"key"],[42,29,31,9],[42,31,31,29,"two"],[42,35,31,33,"key"],[42,38,31,9],[42,39,31,2],[43,0,32,1],[45,0,37,0],[45,11,37,9,"areScenesShallowEqual"],[45,32,37,0],[45,33,37,31,"one"],[45,36,37,0],[45,38,37,36,"two"],[45,41,37,0],[45,43,37,41],[46,0,38,2],[46,11,39,4,"one"],[46,15,39,8,"key"],[46,18,39,4],[46,23,39,16,"two"],[46,27,39,20,"key"],[46,30,39,4],[46,34,40,4,"one"],[46,38,40,8,"index"],[46,43,40,4],[46,48,40,18,"two"],[46,52,40,22,"index"],[46,57,39,4],[46,61,41,4,"one"],[46,65,41,8,"isStale"],[46,72,41,4],[46,77,41,20,"two"],[46,81,41,24,"isStale"],[46,88,39,4],[46,92,42,4,"one"],[46,96,42,8,"isActive"],[46,104,42,4],[46,109,42,21,"two"],[46,113,42,25,"isActive"],[46,121,39,4],[46,125,43,4,"areRoutesShallowEqual"],[46,147,43,26,"one"],[46,151,43,30,"route"],[46,156,43,4],[46,158,43,37,"two"],[46,162,43,41,"route"],[46,167,43,4],[46,168,38,2],[47,0,45,1],[49,0,50,0],[49,11,50,9,"areRoutesShallowEqual"],[49,32,50,0],[49,33,50,31,"one"],[49,36,50,0],[49,38,50,36,"two"],[49,41,50,0],[49,43,50,41],[50,0,51,2],[50,8,51,6],[50,9,51,7,"one"],[50,12,51,6],[50,16,51,14],[50,17,51,15,"two"],[50,20,51,2],[50,22,51,20],[51,0,52,4],[51,13,52,11,"one"],[51,21,52,19,"two"],[51,24,52,4],[52,0,53,3],[54,0,55,2],[54,8,55,6,"one"],[54,12,55,10,"key"],[54,15,55,6],[54,20,55,18,"two"],[54,24,55,22,"key"],[54,27,55,2],[54,29,55,27],[55,0,56,4],[55,13,56,11],[55,18,56,4],[56,0,57,3],[58,0,59,2],[58,11,59,9],[58,38,59,22,"one"],[58,41,59,9],[58,43,59,27,"two"],[58,46,59,9],[58,47,59,2],[59,0,60,1],[61,0,62,15],[61,11,62,24,"ScenesReducer"],[61,24,62,15],[61,25,63,2,"scenes"],[61,31,62,15],[61,33,64,2,"nextState"],[61,42,62,15],[61,44,65,2,"prevState"],[61,53,62,15],[61,55,66,2,"descriptors"],[61,66,62,15],[61,68,67,2],[62,0,71,2,"scenes"],[62,11,71,9,"forEach"],[62,18,71,2],[62,19,71,17],[62,36,71,26],[63,0,71,26],[63,10,72,12,"route"],[63,15,71,26],[63,18,72,22,"scene"],[63,23,71,26],[63,24,72,12,"route"],[63,29,71,26],[65,0,73,4],[65,10,73,8,"descriptors"],[65,25,73,23,"descriptors"],[65,37,73,35,"route"],[65,43,73,41,"key"],[65,46,73,23],[65,47,73,4],[65,49,73,47],[66,0,74,6,"scene"],[66,14,74,12,"descriptor"],[66,24,74,6],[66,27,74,25,"descriptors"],[66,39,74,37,"route"],[66,45,74,43,"key"],[66,48,74,25],[66,49,74,6],[67,0,75,5],[68,0,76,3],[68,5,71,2],[70,0,79,2],[70,8,79,6,"prevState"],[70,22,79,20,"nextState"],[70,31,79,2],[70,33,79,31],[71,0,80,4],[71,13,80,11,"scenes"],[71,19,80,4],[72,0,81,3],[74,0,83,2],[74,8,83,8,"prevScenes"],[74,21,83,21],[74,25,83,25,"Map"],[74,28,83,21],[74,30,83,2],[75,0,84,2],[75,8,84,8,"freshScenes"],[75,22,84,22],[75,26,84,26,"Map"],[75,29,84,22],[75,31,84,2],[76,0,85,2],[76,8,85,8,"staleScenes"],[76,22,85,22],[76,26,85,26,"Map"],[76,29,85,22],[76,31,85,2],[77,0,88,2,"scenes"],[77,11,88,9,"forEach"],[77,18,88,2],[77,19,88,17],[77,36,88,26],[78,0,88,26],[78,10,89,12,"key"],[78,13,88,26],[78,16,89,20,"scene"],[78,21,88,26],[78,22,89,12,"key"],[78,25,88,26],[80,0,90,4],[80,10,90,8,"scene"],[80,16,90,14,"isStale"],[80,23,90,4],[80,25,90,23],[81,0,91,6,"staleScenes"],[81,20,91,18,"set"],[81,23,91,6],[81,24,91,22,"key"],[81,27,91,6],[81,29,91,27,"scene"],[81,34,91,6],[82,0,92,5],[84,0,93,4,"prevScenes"],[84,17,93,15,"set"],[84,20,93,4],[84,21,93,19,"key"],[84,24,93,4],[84,26,93,24,"scene"],[84,31,93,4],[85,0,94,3],[85,5,88,2],[86,0,96,2],[86,8,96,8,"nextKeys"],[86,19,96,19],[86,23,96,23,"Set"],[86,26,96,19],[86,28,96,2],[87,0,97,2,"nextState"],[87,14,97,12,"routes"],[87,20,97,2],[87,21,97,19,"forEach"],[87,28,97,2],[87,29,97,27],[87,39,97,28,"route"],[87,44,97,27],[87,46,97,35,"index"],[87,51,97,27],[87,53,97,45],[88,0,98,4],[88,10,98,10,"key"],[88,16,98,16,"SCENE_KEY_PREFIX"],[88,35,98,35,"route"],[88,41,98,41,"key"],[88,44,98,4],[89,0,100,4],[89,10,100,8,"descriptor"],[89,23,100,21,"descriptors"],[89,38,100,36,"descriptors"],[89,50,100,48,"route"],[89,56,100,54,"key"],[89,59,100,36],[89,60,100,4],[90,0,102,4],[90,10,102,10,"scene"],[90,18,102,18],[91,0,103,6,"index"],[91,20,102,18],[92,0,104,6,"isActive"],[92,18,104,16],[92,23,102,18],[93,0,105,6,"isStale"],[93,17,105,15],[93,22,102,18],[94,0,106,6,"key"],[94,16,102,18],[95,0,107,6,"route"],[95,20,102,18],[96,0,108,6,"descriptor"],[97,0,102,18],[97,7,102,4],[98,0,110,4],[98,30,111,6],[98,31,111,7,"nextKeys"],[98,40,111,16,"has"],[98,43,111,7],[98,44,111,20,"key"],[98,47,111,7],[98,48,110,4],[98,50,112,6],[98,79,112,33,"index"],[98,84,112,6],[98,100,112,48,"key"],[98,103,112,6],[98,129,113,8],[98,145,110,4],[99,0,115,4,"nextKeys"],[99,15,115,13,"add"],[99,18,115,4],[99,19,115,17,"key"],[99,22,115,4],[101,0,117,4],[101,10,117,8,"staleScenes"],[101,22,117,20,"has"],[101,25,117,8],[101,26,117,24,"key"],[101,29,117,8],[101,30,117,4],[101,32,117,30],[102,0,120,6,"staleScenes"],[102,20,120,18,"delete"],[102,26,120,6],[102,27,120,25,"key"],[102,30,120,6],[103,0,121,5],[105,0,122,4,"freshScenes"],[105,18,122,16,"set"],[105,21,122,4],[105,22,122,20,"key"],[105,25,122,4],[105,27,122,25,"scene"],[105,32,122,4],[106,0,123,3],[106,5,97,2],[108,0,125,2],[108,8,125,6,"prevState"],[108,17,125,2],[108,19,125,17],[109,0,127,4,"prevState"],[109,16,127,14,"routes"],[109,22,127,4],[109,23,127,21,"forEach"],[109,30,127,4],[109,31,127,29],[109,41,127,30,"route"],[109,46,127,29],[109,48,127,37,"index"],[109,53,127,29],[109,55,127,47],[110,0,128,6],[110,12,128,12,"key"],[110,18,128,18,"SCENE_KEY_PREFIX"],[110,37,128,37,"route"],[110,43,128,43,"key"],[110,46,128,6],[112,0,129,6],[112,12,129,10,"freshScenes"],[112,24,129,22,"has"],[112,27,129,10],[112,28,129,26,"key"],[112,31,129,10],[112,32,129,6],[112,34,129,32],[113,0,130,8],[114,0,131,7],[116,0,132,6],[116,12,132,12,"lastScene"],[116,24,132,24,"scenes"],[116,31,132,31,"find"],[116,35,132,24],[116,36,132,36],[117,0,132,36],[117,17,132,45,"scene"],[117,23,132,51,"route"],[117,28,132,45],[117,29,132,57,"key"],[117,32,132,45],[117,37,132,65,"route"],[117,43,132,71,"key"],[117,46,132,36],[118,0,132,36],[118,9,132,24],[118,10,132,6],[119,0,139,6],[119,12,139,12,"descriptor"],[119,25,139,25,"lastScene"],[119,37,140,10,"lastScene"],[119,47,140,20,"descriptor"],[119,57,139,25],[119,60,141,10,"descriptors"],[119,72,141,22,"route"],[119,78,141,28,"key"],[119,81,141,10],[119,82,139,6],[121,0,143,6],[121,12,143,10,"descriptor"],[121,22,143,6],[121,24,143,22],[122,0,144,8,"staleScenes"],[122,22,144,20,"set"],[122,25,144,8],[122,26,144,24,"key"],[122,29,144,8],[122,31,144,29],[123,0,145,10,"index"],[123,24,144,29],[124,0,146,10,"isActive"],[124,22,146,20],[124,27,144,29],[125,0,147,10,"isStale"],[125,21,147,19],[125,25,144,29],[126,0,148,10,"key"],[126,20,144,29],[127,0,149,10,"route"],[127,24,144,29],[128,0,150,10,"descriptor"],[129,0,144,29],[129,11,144,8],[130,0,152,7],[131,0,153,5],[131,7,127,4],[132,0,154,3],[134,0,156,2],[134,8,156,8,"nextScenes"],[134,21,156,21],[134,23,156,2],[136,0,158,2],[136,8,158,8,"mergeScene"],[136,21,158,21],[136,30,158,8,"mergeScene"],[136,40,158,21],[136,52,158,34],[137,0,158,34],[137,10,159,12,"key"],[137,13,158,34],[137,16,159,20,"nextScene"],[137,25,158,34],[137,26,159,12,"key"],[137,29,158,34],[138,0,160,4],[138,10,160,10,"prevScene"],[138,22,160,22,"prevScenes"],[138,33,160,33,"has"],[138,36,160,22],[138,37,160,37,"key"],[138,40,160,22],[138,44,160,44,"prevScenes"],[138,55,160,55,"get"],[138,58,160,44],[138,59,160,59,"key"],[138,62,160,44],[138,63,160,22],[138,66,160,66],[138,70,160,4],[140,0,161,4],[140,10,161,8,"prevScene"],[140,23,161,21,"areScenesShallowEqual"],[140,45,161,43,"prevScene"],[140,54,161,21],[140,56,161,54,"nextScene"],[140,65,161,21],[140,66,161,4],[140,68,161,66],[141,0,164,6,"nextScenes"],[141,19,164,17,"push"],[141,23,164,6],[141,24,164,22,"prevScene"],[141,33,164,6],[142,0,165,5],[142,7,161,4],[142,13,165,11],[143,0,166,6,"nextScenes"],[143,19,166,17,"push"],[143,23,166,6],[143,24,166,22,"nextScene"],[143,33,166,6],[144,0,167,5],[145,0,168,3],[145,5,158,2],[147,0,170,2,"staleScenes"],[147,16,170,14,"forEach"],[147,23,170,2],[147,24,170,22,"mergeScene"],[147,34,170,2],[148,0,171,2,"freshScenes"],[148,16,171,14,"forEach"],[148,23,171,2],[148,24,171,22,"mergeScene"],[148,34,171,2],[149,0,173,2,"nextScenes"],[149,15,173,13,"sort"],[149,19,173,2],[149,20,173,18,"compareScenes"],[149,33,173,2],[150,0,175,2],[150,8,175,6,"activeScenesCount"],[150,28,175,26],[150,29,175,2],[151,0,176,2,"nextScenes"],[151,15,176,13,"forEach"],[151,22,176,2],[151,23,176,21],[151,33,176,22,"scene"],[151,38,176,21],[151,40,176,29,"ii"],[151,42,176,21],[151,44,176,36],[152,0,177,4],[152,10,177,10,"isActive"],[152,21,177,21],[152,22,177,22,"scene"],[152,28,177,28,"isStale"],[152,35,177,21],[152,39,177,39,"scene"],[152,45,177,45,"index"],[152,50,177,39],[152,55,177,55,"nextState"],[152,65,177,65,"index"],[152,70,177,4],[154,0,178,4],[154,10,178,8,"isActive"],[154,23,178,21,"scene"],[154,29,178,27,"isActive"],[154,37,178,4],[154,39,178,37],[155,0,179,6,"nextScenes"],[155,19,179,17,"ii"],[155,21,179,6],[155,43,180,11,"scene"],[155,48,179,6],[156,0,181,8,"isActive"],[157,0,179,6],[158,0,183,5],[160,0,184,4],[160,10,184,8,"isActive"],[160,18,184,4],[160,20,184,18],[161,0,185,6,"activeScenesCount"],[162,0,186,5],[163,0,187,3],[163,5,176,2],[164,0,189,2],[164,28,190,4,"activeScenesCount"],[164,50,190,26],[164,51,189,2],[164,53,191,4],[164,108,189,2],[164,110,192,4,"activeScenesCount"],[164,127,189,2],[166,0,195,2],[166,8,195,6,"nextScenes"],[166,19,195,17,"length"],[166,25,195,6],[166,30,195,28,"scenes"],[166,37,195,35,"length"],[166,43,195,2],[166,45,195,43],[167,0,196,4],[167,13,196,11,"nextScenes"],[167,23,196,4],[168,0,197,3],[170,0,199,2],[170,8,200,4,"nextScenes"],[170,19,200,15,"some"],[170,23,200,4],[170,24,201,6],[170,34,201,7,"scene"],[170,39,201,6],[170,41,201,14,"index"],[170,46,201,6],[171,0,201,6],[171,13,201,24],[171,14,201,25,"areScenesShallowEqual"],[171,36,201,47,"scenes"],[171,43,201,54,"index"],[171,48,201,47],[171,49,201,25],[171,51,201,62,"scene"],[171,56,201,25],[171,57,201,6],[172,0,201,6],[172,5,200,4],[172,6,199,2],[172,8,203,4],[173,0,204,4],[173,13,204,11,"nextScenes"],[173,23,204,4],[174,0,205,3],[176,0,208,2],[176,11,208,9,"scenes"],[176,17,208,2],[177,0,209,1]]},"type":"js/module"}]}